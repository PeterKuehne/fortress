<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="graphics__interface_8h" kind="file">
    <compoundname>graphics_interface.h</compoundname>
    <includes refid="color_8h" local="yes">color.h</includes>
    <includedby refid="game__engine__interface_8h" local="yes">game_engine_interface.h</includedby>
    <includedby refid="gameengine_8h" local="yes">gameengine.h</includedby>
    <includedby refid="graphics_8h" local="yes">graphics.h</includedby>
    <incdepgraph>
      <node id="697">
        <label>graphics_interface.h</label>
        <link refid="graphics_interface.h"/>
        <childnode refid="698" relation="include">
        </childnode>
      </node>
      <node id="698">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="713">
        <label>window_manager.cpp</label>
        <link refid="window__manager_8cpp"/>
      </node>
      <node id="717">
        <label>game_system_base.cpp</label>
        <link refid="game__system__base_8cpp"/>
      </node>
      <node id="714">
        <label>game_system_base.h</label>
        <link refid="game__system__base_8h"/>
        <childnode refid="715" relation="include">
        </childnode>
        <childnode refid="717" relation="include">
        </childnode>
        <childnode refid="718" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
        <childnode refid="720" relation="include">
        </childnode>
      </node>
      <node id="726">
        <label>graphics.cpp</label>
        <link refid="graphics_8cpp"/>
      </node>
      <node id="699">
        <label>graphics_interface.h</label>
        <link refid="graphics_interface.h"/>
        <childnode refid="700" relation="include">
        </childnode>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="725" relation="include">
        </childnode>
      </node>
      <node id="718">
        <label>movement_system.h</label>
        <link refid="movement__system_8h"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
      </node>
      <node id="715">
        <label>combat_system.h</label>
        <link refid="combat__system_8h"/>
        <childnode refid="716" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
      </node>
      <node id="716">
        <label>combat_system.cpp</label>
        <link refid="combat__system_8cpp"/>
      </node>
      <node id="723">
        <label>event_manager.cpp</label>
        <link refid="event__manager_8cpp"/>
      </node>
      <node id="707">
        <label>map_window.cpp</label>
        <link refid="map__window_8cpp"/>
      </node>
      <node id="709">
        <label>splash_window.cpp</label>
        <link refid="splash__window_8cpp"/>
      </node>
      <node id="703">
        <label>entity_manager.cpp</label>
        <link refid="entity__manager_8cpp"/>
      </node>
      <node id="722">
        <label>event_manager.h</label>
        <link refid="event__manager_8h"/>
        <childnode refid="723" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
      </node>
      <node id="720">
        <label>npc_system.h</label>
        <link refid="npc__system_8h"/>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="721" relation="include">
        </childnode>
      </node>
      <node id="719">
        <label>sprite_system.h</label>
        <link refid="sprite__system_8h"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
      <node id="712">
        <label>window_manager.h</label>
        <link refid="window__manager_8h"/>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
      <node id="724">
        <label>window.cpp</label>
        <link refid="window_8cpp"/>
      </node>
      <node id="706">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="705">
        <label>generator.cpp</label>
        <link refid="generator_8cpp"/>
      </node>
      <node id="725">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="726" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="704">
        <label>gameengine.cpp</label>
        <link refid="gameengine_8cpp"/>
      </node>
      <node id="702">
        <label>algorithm.cpp</label>
        <link refid="algorithm_8cpp"/>
      </node>
      <node id="700">
        <label>game_engine_interface.h</label>
        <link refid="game__engine__interface_8h"/>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="714" relation="include">
        </childnode>
        <childnode refid="722" relation="include">
        </childnode>
        <childnode refid="719" relation="include">
        </childnode>
        <childnode refid="724" relation="include">
        </childnode>
      </node>
      <node id="708">
        <label>movement_system.cpp</label>
        <link refid="movement__system_8cpp"/>
      </node>
      <node id="710">
        <label>sprite_system.cpp</label>
        <link refid="sprite__system_8cpp"/>
      </node>
      <node id="711">
        <label>window_manager_interface.h</label>
        <link refid="window__manager__interface_8h"/>
        <childnode refid="701" relation="include">
        </childnode>
        <childnode refid="712" relation="include">
        </childnode>
      </node>
      <node id="701">
        <label>gameengine.h</label>
        <link refid="gameengine_8h"/>
        <childnode refid="702" relation="include">
        </childnode>
        <childnode refid="703" relation="include">
        </childnode>
        <childnode refid="704" relation="include">
        </childnode>
        <childnode refid="705" relation="include">
        </childnode>
        <childnode refid="706" relation="include">
        </childnode>
        <childnode refid="707" relation="include">
        </childnode>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="709" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
      </node>
      <node id="721">
        <label>npc_system.cpp</label>
        <link refid="npc__system_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classGraphicsInterface" prot="public">GraphicsInterface</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="graphics__interface_8h_1ae8b5bc37678d3ba69d310ca3c6e7393f" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* KeyboardFuncPtr)(unsigned char key, int x, int y)</definition>
        <argsstring>)(unsigned char key, int x, int y)</argsstring>
        <name>KeyboardFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/graphics_interface.h" line="7" column="1" bodyfile="/home/peter/Development/fortress/src/graphics_interface.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graphics__interface_8h_1a71f99ab7c9bb1fb2ae09a63a9d4d422b" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* DisplayFuncPtr)(void)</definition>
        <argsstring>)(void)</argsstring>
        <name>DisplayFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/graphics_interface.h" line="8" column="1" bodyfile="/home/peter/Development/fortress/src/graphics_interface.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="graphics__interface_8h_1a60715b4a82a8c09c76ddd8b483d768ef" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* MouseFuncPtr)(int button, int state, int x, int y)</definition>
        <argsstring>)(int button, int state, int x, int y)</argsstring>
        <name>MouseFuncPtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/graphics_interface.h" line="9" column="1" bodyfile="/home/peter/Development/fortress/src/graphics_interface.h" bodystart="9" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>GRAPHICS_INTERFACE_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>GRAPHICS_INTERFACE_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="color_8h" kindref="compound">color.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="graphics__interface_8h_1ae8b5bc37678d3ba69d310ca3c6e7393f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="graphics__interface_8h_1ae8b5bc37678d3ba69d310ca3c6e7393f" kindref="member">KeyboardFuncPtr</ref>)<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="8" refid="graphics__interface_8h_1a71f99ab7c9bb1fb2ae09a63a9d4d422b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="graphics__interface_8h_1a71f99ab7c9bb1fb2ae09a63a9d4d422b" kindref="member">DisplayFuncPtr</ref>)<sp/>(void);</highlight></codeline>
<codeline lineno="9" refid="graphics__interface_8h_1a60715b4a82a8c09c76ddd8b483d768ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="graphics__interface_8h_1a60715b4a82a8c09c76ddd8b483d768ef" kindref="member">MouseFuncPtr</ref>)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>button,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="classGraphicsInterface" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classGraphicsInterface" kindref="compound">GraphicsInterface</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="13" refid="classGraphicsInterface_1ada388bd981edb66e9d47c23a3ab11e70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1ada388bd981edb66e9d47c23a3ab11e70" kindref="member">~GraphicsInterface</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1a3a47a8e69b8f31a962bed451b3f7c498" kindref="member">initialise</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1a7eab61b47e23240090b339151809eb1d" kindref="member">spin</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1a31ab6e9004825ec7ea337c2dd530114a" kindref="member">beginScreenUpdate</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1aa6d993639a30dee68aa9aacd9ba1ad5c" kindref="member">endScreenUpdate</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1aa58e5f8df996b8d64a456dedaa3bb549" kindref="member">drawString</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1af46b9a83803b47cda354449d3afced25" kindref="member">drawTile</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tile,<sp/><ref refid="classColor" kindref="compound">Color</ref><sp/>fg,<sp/><ref refid="classColor" kindref="compound">Color</ref><sp/>bg)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1a5ee4a7b699755b8348955b7e166c154b" kindref="member">drawBorder</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1a306cf250c51013ff35c3a657d694f921" kindref="member">setKeyboardFunc</ref><sp/>(<ref refid="graphics__interface_8h_1ae8b5bc37678d3ba69d310ca3c6e7393f" kindref="member">KeyboardFuncPtr</ref><sp/>func)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1ac79f6dfb01b2915fb2ce51efabd692c5" kindref="member">setKeyboardUpFunc</ref><sp/>(<ref refid="graphics__interface_8h_1ae8b5bc37678d3ba69d310ca3c6e7393f" kindref="member">KeyboardFuncPtr</ref><sp/>func)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1a83af0372a01cd878a724ed81722b62cd" kindref="member">setDisplayFunc</ref><sp/>(<ref refid="graphics__interface_8h_1a71f99ab7c9bb1fb2ae09a63a9d4d422b" kindref="member">DisplayFuncPtr</ref><sp/>func)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGraphicsInterface_1a5730723c0b0e2d676ff11882076c1e6c" kindref="member">setMouseFunc</ref><sp/>(<ref refid="graphics__interface_8h_1a60715b4a82a8c09c76ddd8b483d768ef" kindref="member">MouseFuncPtr</ref><sp/>func)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/peter/Development/fortress/src/graphics_interface.h"/>
  </compounddef>
</doxygen>
