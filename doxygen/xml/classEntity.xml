<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classEntity" kind="class" prot="public">
    <compoundname>Entity</compoundname>
    <includes refid="entity_8h" local="no">entity.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classEntity_1a6f579cda6059d102e9074e11a27e0282" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class EntityManager</definition>
        <argsstring></argsstring>
        <name>EntityManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="16" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEntity_1a3dd68bb3258dd9ed2c878712b08a523b" prot="private" static="no" mutable="no">
        <type><ref refid="entity_8h_1a3812b46f7256476cf244cbc0f4a3bde9" kindref="member">EntityId</ref></type>
        <definition>EntityId Entity::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="27" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntity_1a4b945ebe36bda22cc9cc7c6620f43d51" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Entity::m_name</definition>
        <argsstring></argsstring>
        <name>m_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="28" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntity_1afb554fadb21bb5bc9cf51633373a387a" prot="private" static="no" mutable="no">
        <type>std::set&lt; <ref refid="entity_8h_1a305263dd89ad9fde1863aece00907351" kindref="member">Tag</ref> &gt;</type>
        <definition>std::set&lt;Tag&gt; Entity::m_tags</definition>
        <argsstring></argsstring>
        <name>m_tags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="29" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classEntity_1a133b2415227ddcd227cb5f287cc43103" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Entity::addTag</definition>
        <argsstring>(Tag tag)</argsstring>
        <name>addTag</name>
        <param>
          <type><ref refid="entity_8h_1a305263dd89ad9fde1863aece00907351" kindref="member">Tag</ref></type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="18" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1a6fc308a723e369bc66608b6c456de31f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::set&lt; <ref refid="entity_8h_1a305263dd89ad9fde1863aece00907351" kindref="member">Tag</ref> &gt;</type>
        <definition>std::set&lt;Tag&gt; Entity::getTags</definition>
        <argsstring>()</argsstring>
        <name>getTags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="19" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1a34a9112d28e1192137f672893c55a2c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Entity::hasTag</definition>
        <argsstring>(Tag tag)</argsstring>
        <name>hasTag</name>
        <param>
          <type><ref refid="entity_8h_1a305263dd89ad9fde1863aece00907351" kindref="member">Tag</ref></type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="20" column="1" bodyfile="/home/peter/Development/fortress/src/entity.cpp" bodystart="8" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1a8ce04051a248625ce653260e0e706799" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Entity::setId</definition>
        <argsstring>(EntityId id)</argsstring>
        <name>setId</name>
        <param>
          <type><ref refid="entity_8h_1a3812b46f7256476cf244cbc0f4a3bde9" kindref="member">EntityId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="21" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1a66a967740faf35f7fcece11e9e65e344" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="entity_8h_1a3812b46f7256476cf244cbc0f4a3bde9" kindref="member">EntityId</ref></type>
        <definition>EntityId Entity::getId</definition>
        <argsstring>() const </argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="22" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="22" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1a2272426be85933edb3243cd50def65d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Entity::setName</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>setName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="24" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classEntity_1a34a6186465703be860fe32f44208619a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; Entity::getName</definition>
        <argsstring>() const </argsstring>
        <name>getName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity.h" line="25" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="50">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="47">
        <label>Entity</label>
        <link refid="classEntity"/>
        <childnode refid="48" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="49" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>std::set&lt; Tag &gt;</label>
      </node>
      <node id="49">
        <label>std::string</label>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/peter/Development/fortress/src/entity.h" line="15" column="1" bodyfile="/home/peter/Development/fortress/src/entity.h" bodystart="15" bodyend="30"/>
    <listofallmembers>
      <member refid="classEntity_1a133b2415227ddcd227cb5f287cc43103" prot="public" virt="non-virtual"><scope>Entity</scope><name>addTag</name></member>
      <member refid="classEntity_1a6f579cda6059d102e9074e11a27e0282" prot="private" virt="non-virtual"><scope>Entity</scope><name>EntityManager</name></member>
      <member refid="classEntity_1a66a967740faf35f7fcece11e9e65e344" prot="public" virt="non-virtual"><scope>Entity</scope><name>getId</name></member>
      <member refid="classEntity_1a34a6186465703be860fe32f44208619a" prot="public" virt="non-virtual"><scope>Entity</scope><name>getName</name></member>
      <member refid="classEntity_1a6fc308a723e369bc66608b6c456de31f" prot="public" virt="non-virtual"><scope>Entity</scope><name>getTags</name></member>
      <member refid="classEntity_1a34a9112d28e1192137f672893c55a2c7" prot="public" virt="non-virtual"><scope>Entity</scope><name>hasTag</name></member>
      <member refid="classEntity_1a3dd68bb3258dd9ed2c878712b08a523b" prot="private" virt="non-virtual"><scope>Entity</scope><name>m_id</name></member>
      <member refid="classEntity_1a4b945ebe36bda22cc9cc7c6620f43d51" prot="private" virt="non-virtual"><scope>Entity</scope><name>m_name</name></member>
      <member refid="classEntity_1afb554fadb21bb5bc9cf51633373a387a" prot="private" virt="non-virtual"><scope>Entity</scope><name>m_tags</name></member>
      <member refid="classEntity_1a8ce04051a248625ce653260e0e706799" prot="public" virt="non-virtual"><scope>Entity</scope><name>setId</name></member>
      <member refid="classEntity_1a2272426be85933edb3243cd50def65d1" prot="public" virt="non-virtual"><scope>Entity</scope><name>setName</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
