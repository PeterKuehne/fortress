<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classGameEngine" kind="class" prot="public">
    <compoundname>GameEngine</compoundname>
    <basecompoundref refid="classGameEngineInterface" prot="public" virt="non-virtual">GameEngineInterface</basecompoundref>
    <includes refid="gameengine_8h" local="no">gameengine.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGameEngine_1ae50a77cf15fb12d6bb3e70ea64d4e652" prot="private" static="no" mutable="no">
        <type>unsigned long long</type>
        <definition>unsigned long long GameEngine::m_tick</definition>
        <argsstring></argsstring>
        <name>m_tick</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="45" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameEngine_1af947cd69a795991a32716391175f61bc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool GameEngine::m_playerTurn</definition>
        <argsstring></argsstring>
        <name>m_playerTurn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="46" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameEngine_1a3bf658348acbe7dafc657dc9c5442102" prot="private" static="no" mutable="no">
        <type><ref refid="classEntityManagerInterface" kindref="compound">EntityManagerInterface</ref> *</type>
        <definition>EntityManagerInterface* GameEngine::m_entityManager</definition>
        <argsstring></argsstring>
        <name>m_entityManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="48" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameEngine_1ab6c16baef2f287aef03cb336c831cdf6" prot="private" static="no" mutable="no">
        <type><ref refid="classEventManagerInterface" kindref="compound">EventManagerInterface</ref> *</type>
        <definition>EventManagerInterface* GameEngine::m_eventManager</definition>
        <argsstring></argsstring>
        <name>m_eventManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="49" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameEngine_1a3308c8793731727773dbbd4614e06db6" prot="private" static="no" mutable="no">
        <type><ref refid="classWindowManagerInterface" kindref="compound">WindowManagerInterface</ref> *</type>
        <definition>WindowManagerInterface* GameEngine::m_windowManager</definition>
        <argsstring></argsstring>
        <name>m_windowManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="50" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameEngine_1acc3e703e0019b3a5920a2d01339ccd68" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classGameSystemInterface" kindref="compound">GameSystemInterface</ref> * &gt;</type>
        <definition>std::vector&lt;GameSystemInterface*&gt; GameEngine::m_systems</definition>
        <argsstring></argsstring>
        <name>m_systems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="52" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameEngine_1a622586460faf2b46676aee1918d6a7eb" prot="private" static="no" mutable="no">
        <type><ref refid="classGraphicsInterface" kindref="compound">GraphicsInterface</ref> *</type>
        <definition>GraphicsInterface* GameEngine::m_graphics</definition>
        <argsstring></argsstring>
        <name>m_graphics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="54" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classGameEngine_1a8ce4a186b42c05555660321ae72efe9c" prot="private" static="no" mutable="no">
        <type><ref refid="classGeneratorInterface" kindref="compound">GeneratorInterface</ref> *</type>
        <definition>GeneratorInterface* GameEngine::m_generator</definition>
        <argsstring></argsstring>
        <name>m_generator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="55" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGameEngine_1a24a61ae50e4acd529abf6db0e07a732b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameEngine::GameEngine</definition>
        <argsstring>(GraphicsInterface *a_graphics)</argsstring>
        <name>GameEngine</name>
        <param>
          <type><ref refid="classGraphicsInterface" kindref="compound">GraphicsInterface</ref> *</type>
          <declname>a_graphics</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="18" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.cpp" bodystart="38" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a8e59d8341ef9d2dcc62eee1437e37f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>GameEngine::~GameEngine</definition>
        <argsstring>()</argsstring>
        <name>~GameEngine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="19" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a6b4efc1f1d83f8c54c9f51f083705b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameEngine::initialise</definition>
        <argsstring>(void)</argsstring>
        <name>initialise</name>
        <reimplements refid="classGameEngineInterface_1a25d6afec02af24ef82961dc32deee5d3">initialise</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="21" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.cpp" bodystart="55" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a1df5865f2b074ef0fc68e6438b2fa265" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameEngine::tick</definition>
        <argsstring>(void)</argsstring>
        <name>tick</name>
        <reimplements refid="classGameEngineInterface_1a018db9a3868f8ef3c5b864bae5047a42">tick</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="22" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.cpp" bodystart="93" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1ad82b626def2e52b28f0d6c2d167589f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GameEngine::quit</definition>
        <argsstring>()</argsstring>
        <name>quit</name>
        <reimplements refid="classGameEngineInterface_1a835c89ce5e9dac696f2b776e8b3fd6db">quit</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="24" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a789635fa84c65458455506ef54285b19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool GameEngine::isPlayerTurn</definition>
        <argsstring>()</argsstring>
        <name>isPlayerTurn</name>
        <reimplements refid="classGameEngineInterface_1a1f8c96fabf08e5f978859611a68eab03">isPlayerTurn</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="25" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1aa6181abb92ead7a904649fa03742caab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GameEngine::swapTurn</definition>
        <argsstring>()</argsstring>
        <name>swapTurn</name>
        <reimplements refid="classGameEngineInterface_1aff6fe7a94c1421f26642cf0485c2d4ce">swapTurn</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="26" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1af8db59fc46f510d9f6fd93c129b32a30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void GameEngine::raiseEvent</definition>
        <argsstring>(Event *event)</argsstring>
        <name>raiseEvent</name>
        <reimplements refid="classGameEngineInterface_1a4826bce0dc77598e2ca0869ce2462db7">raiseEvent</reimplements>
        <param>
          <type><ref refid="classEvent" kindref="compound">Event</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="28" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1abb290b49ef61faec60a4960ac9df4303" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classEntityManagerInterface" kindref="compound">EntityManagerInterface</ref> *</type>
        <definition>EntityManagerInterface* GameEngine::getEntities</definition>
        <argsstring>()</argsstring>
        <name>getEntities</name>
        <reimplements refid="classGameEngineInterface_1ac7b9bb5c99fd8fec773a64d492d1869e">getEntities</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="29" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="29" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a6116c0b6acf3ed29b7020f1df9b69403" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void GameEngine::loadMap</definition>
        <argsstring>(const std::string &amp;mapName)</argsstring>
        <name>loadMap</name>
        <reimplements refid="classGameEngineInterface_1aa7dc3bc46f821ac6f545f191272be2b3">loadMap</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>mapName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="31" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.cpp" bodystart="84" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a0be043b34ca2bae3734e025f9d3f0bf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>unsigned long long</type>
        <definition>unsigned long long GameEngine::getTick</definition>
        <argsstring>()</argsstring>
        <name>getTick</name>
        <reimplements refid="classGameEngineInterface_1adcdcb9774de6e2df6ef0d0c45f3216d7">getTick</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="33" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="33" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a28923eb5e29aac5f9541ca4af1ed17c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classWindowManagerInterface" kindref="compound">WindowManagerInterface</ref> *</type>
        <definition>WindowManagerInterface* GameEngine::getWindows</definition>
        <argsstring>()</argsstring>
        <name>getWindows</name>
        <reimplements refid="classGameEngineInterface_1a2c99c33358dd5c5a34e046887440ced1">getWindows</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="34" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a602659da54f2d3fd5f3df555d22da2bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classGraphicsInterface" kindref="compound">GraphicsInterface</ref> *</type>
        <definition>GraphicsInterface* GameEngine::getGraphics</definition>
        <argsstring>()</argsstring>
        <name>getGraphics</name>
        <reimplements refid="classGameEngineInterface_1ad1f1c9ed5b4e809c1133719af535db2d">getGraphics</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="36" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a014c9925928164befd6aa03d6bc21dbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameEngine::setEntityManager</definition>
        <argsstring>(EntityManagerInterface *a_manager)</argsstring>
        <name>setEntityManager</name>
        <param>
          <type><ref refid="classEntityManagerInterface" kindref="compound">EntityManagerInterface</ref> *</type>
          <declname>a_manager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="38" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a27773808b06416c54beb52069c966a3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameEngine::setWindowManager</definition>
        <argsstring>(WindowManagerInterface *a_manager)</argsstring>
        <name>setWindowManager</name>
        <param>
          <type><ref refid="classWindowManagerInterface" kindref="compound">WindowManagerInterface</ref> *</type>
          <declname>a_manager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="39" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a106e8e5d663134be9269b1a94b166c4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameEngine::setEventManager</definition>
        <argsstring>(EventManagerInterface *a_manager)</argsstring>
        <name>setEventManager</name>
        <param>
          <type><ref refid="classEventManagerInterface" kindref="compound">EventManagerInterface</ref> *</type>
          <declname>a_manager</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="40" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a58c80c2beb150f2816112371476aee12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameEngine::addSystem</definition>
        <argsstring>(GameSystemInterface *a_system)</argsstring>
        <name>addSystem</name>
        <param>
          <type><ref refid="classGameSystemInterface" kindref="compound">GameSystemInterface</ref> *</type>
          <declname>a_system</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="42" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classGameEngine_1a35bcdcd4574b2b1148fcff5a46a9277d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void GameEngine::setGenerator</definition>
        <argsstring>(GeneratorInterface *a_generator)</argsstring>
        <name>setGenerator</name>
        <param>
          <type><ref refid="classGeneratorInterface" kindref="compound">GeneratorInterface</ref> *</type>
          <declname>a_generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/gameengine.h" line="43" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="43" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="93">
        <label>GameEngineInterface</label>
        <link refid="classGameEngineInterface"/>
      </node>
      <node id="92">
        <label>GameEngine</label>
        <link refid="classGameEngine"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="102">
        <label>GraphicsInterface</label>
        <link refid="classGraphicsInterface"/>
      </node>
      <node id="96">
        <label>EventManagerInterface</label>
        <link refid="classEventManagerInterface"/>
      </node>
      <node id="98">
        <label>GameSystemInterface</label>
        <link refid="classGameSystemInterface"/>
      </node>
      <node id="95">
        <label>GameEngineInterface</label>
        <link refid="classGameEngineInterface"/>
      </node>
      <node id="97">
        <label>std::vector&lt; GameSystemInterface * &gt;</label>
        <childnode refid="98" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="99">
        <label>EntityManagerInterface</label>
        <link refid="classEntityManagerInterface"/>
      </node>
      <node id="101">
        <label>WindowManagerInterface</label>
        <link refid="classWindowManagerInterface"/>
      </node>
      <node id="100">
        <label>GeneratorInterface</label>
        <link refid="classGeneratorInterface"/>
      </node>
      <node id="94">
        <label>GameEngine</label>
        <link refid="classGameEngine"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
        <childnode refid="96" relation="usage">
          <edgelabel>m_eventManager</edgelabel>
        </childnode>
        <childnode refid="97" relation="usage">
          <edgelabel>m_systems</edgelabel>
        </childnode>
        <childnode refid="99" relation="usage">
          <edgelabel>m_entityManager</edgelabel>
        </childnode>
        <childnode refid="100" relation="usage">
          <edgelabel>m_generator</edgelabel>
        </childnode>
        <childnode refid="101" relation="usage">
          <edgelabel>m_windowManager</edgelabel>
        </childnode>
        <childnode refid="102" relation="usage">
          <edgelabel>m_graphics</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/peter/Development/fortress/src/gameengine.h" line="16" column="1" bodyfile="/home/peter/Development/fortress/src/gameengine.h" bodystart="16" bodyend="56"/>
    <listofallmembers>
      <member refid="classGameEngine_1a58c80c2beb150f2816112371476aee12" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>addSystem</name></member>
      <member refid="classGameEngine_1a24a61ae50e4acd529abf6db0e07a732b" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>GameEngine</name></member>
      <member refid="classGameEngineInterface_1acfe04e158f13c49fa34201d965856f98" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>GameEngineInterface</name></member>
      <member refid="classGameEngine_1abb290b49ef61faec60a4960ac9df4303" prot="public" virt="virtual"><scope>GameEngine</scope><name>getEntities</name></member>
      <member refid="classGameEngine_1a602659da54f2d3fd5f3df555d22da2bc" prot="public" virt="virtual"><scope>GameEngine</scope><name>getGraphics</name></member>
      <member refid="classGameEngine_1a0be043b34ca2bae3734e025f9d3f0bf0" prot="public" virt="virtual"><scope>GameEngine</scope><name>getTick</name></member>
      <member refid="classGameEngine_1a28923eb5e29aac5f9541ca4af1ed17c3" prot="public" virt="virtual"><scope>GameEngine</scope><name>getWindows</name></member>
      <member refid="classGameEngine_1a6b4efc1f1d83f8c54c9f51f083705b81" prot="public" virt="virtual"><scope>GameEngine</scope><name>initialise</name></member>
      <member refid="classGameEngine_1a789635fa84c65458455506ef54285b19" prot="public" virt="virtual"><scope>GameEngine</scope><name>isPlayerTurn</name></member>
      <member refid="classGameEngine_1a6116c0b6acf3ed29b7020f1df9b69403" prot="public" virt="virtual"><scope>GameEngine</scope><name>loadMap</name></member>
      <member refid="classGameEngine_1a3bf658348acbe7dafc657dc9c5442102" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_entityManager</name></member>
      <member refid="classGameEngine_1ab6c16baef2f287aef03cb336c831cdf6" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_eventManager</name></member>
      <member refid="classGameEngine_1a8ce4a186b42c05555660321ae72efe9c" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_generator</name></member>
      <member refid="classGameEngine_1a622586460faf2b46676aee1918d6a7eb" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_graphics</name></member>
      <member refid="classGameEngine_1af947cd69a795991a32716391175f61bc" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_playerTurn</name></member>
      <member refid="classGameEngine_1acc3e703e0019b3a5920a2d01339ccd68" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_systems</name></member>
      <member refid="classGameEngine_1ae50a77cf15fb12d6bb3e70ea64d4e652" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_tick</name></member>
      <member refid="classGameEngine_1a3308c8793731727773dbbd4614e06db6" prot="private" virt="non-virtual"><scope>GameEngine</scope><name>m_windowManager</name></member>
      <member refid="classGameEngine_1ad82b626def2e52b28f0d6c2d167589f6" prot="public" virt="virtual"><scope>GameEngine</scope><name>quit</name></member>
      <member refid="classGameEngine_1af8db59fc46f510d9f6fd93c129b32a30" prot="public" virt="virtual"><scope>GameEngine</scope><name>raiseEvent</name></member>
      <member refid="classGameEngine_1a014c9925928164befd6aa03d6bc21dbc" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>setEntityManager</name></member>
      <member refid="classGameEngine_1a106e8e5d663134be9269b1a94b166c4a" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>setEventManager</name></member>
      <member refid="classGameEngine_1a35bcdcd4574b2b1148fcff5a46a9277d" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>setGenerator</name></member>
      <member refid="classGameEngine_1a27773808b06416c54beb52069c966a3b" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>setWindowManager</name></member>
      <member refid="classGameEngine_1aa6181abb92ead7a904649fa03742caab" prot="public" virt="virtual"><scope>GameEngine</scope><name>swapTurn</name></member>
      <member refid="classGameEngine_1a1df5865f2b074ef0fc68e6438b2fa265" prot="public" virt="virtual"><scope>GameEngine</scope><name>tick</name></member>
      <member refid="classGameEngine_1a8e59d8341ef9d2dcc62eee1437e37f14" prot="public" virt="non-virtual"><scope>GameEngine</scope><name>~GameEngine</name></member>
      <member refid="classGameEngineInterface_1a3f62425d6da8aa68ee3698dc3034aa89" prot="public" virt="virtual"><scope>GameEngine</scope><name>~GameEngineInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
