<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classWindow" kind="class" prot="public">
    <compoundname>Window</compoundname>
    <basecompoundref refid="classWindowInterface" prot="public" virt="non-virtual">WindowInterface</basecompoundref>
    <derivedcompoundref refid="classMapWindow" prot="public" virt="non-virtual">MapWindow</derivedcompoundref>
    <derivedcompoundref refid="classSplashWindow" prot="public" virt="non-virtual">SplashWindow</derivedcompoundref>
    <includes refid="window_8h" local="no">window.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classWindow_1a78a36ba2259fdd12ad2cf3346430fb35" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int Window::MAX_BUTTONS</definition>
        <argsstring></argsstring>
        <name>MAX_BUTTONS</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="11" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classWindow_1a821f2d3494f4f8942eb9785a11cb53a3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Window::ascii_keys[256]</definition>
        <argsstring>[256]</argsstring>
        <name>ascii_keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="31" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWindow_1aa0423e0229d8bfadfdb48dfc353a1f14" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Window::special_keys[256]</definition>
        <argsstring>[256]</argsstring>
        <name>special_keys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="32" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWindow_1adf12eb74f1a9eb60cf9dd9e95ad73e07" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Window::m_buttons[MAX_BUTTONS]</definition>
        <argsstring>[MAX_BUTTONS]</argsstring>
        <name>m_buttons</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="33" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classWindow_1ac9461ed7e87d19ee881a582909f7229b" prot="private" static="no" mutable="no">
        <type><ref refid="classGameEngineInterface" kindref="compound">GameEngineInterface</ref> *</type>
        <definition>GameEngineInterface* Window::m_engine</definition>
        <argsstring></argsstring>
        <name>m_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="34" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classWindow_1a74e6087da23d3c24e9fac0245e5ec92c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Window::Window</definition>
        <argsstring>()</argsstring>
        <name>Window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="13" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="13" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a62b4a97b3c2e492f1d9a46092011e2d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Window::~Window</definition>
        <argsstring>()</argsstring>
        <name>~Window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="14" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a3dcd22169bd4d40f4b35eafdea31f6dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Window::initialise</definition>
        <argsstring>(GameEngineInterface *a_engine)</argsstring>
        <name>initialise</name>
        <reimplements refid="classWindowInterface_1a8277c1eb7d3ae7b3f13e06081ffcf66a">initialise</reimplements>
        <reimplementedby refid="classMapWindow_1affdeec7b3b899c38f16d04d170970e70">initialise</reimplementedby>
        <param>
          <type><ref refid="classGameEngineInterface" kindref="compound">GameEngineInterface</ref> *</type>
          <declname>a_engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="15" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="4" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1ae0ed7fd17df30f2d262cb684560e0469" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Window::destroy</definition>
        <argsstring>(void)</argsstring>
        <name>destroy</name>
        <reimplements refid="classWindowInterface_1afeaed24b8e350acb196964106f2a0146">destroy</reimplements>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="16" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a55a6e31e36665bd3bcffcd844f5f0385" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classGameEngineInterface" kindref="compound">GameEngineInterface</ref> *</type>
        <definition>virtual GameEngineInterface* Window::getEngine</definition>
        <argsstring>()</argsstring>
        <name>getEngine</name>
        <reimplements refid="classWindowInterface_1ac5970434199b518109a95a5cb645814a">getEngine</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="18" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a25a5308909ec422bebb480c803e1233c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Window::keyDown</definition>
        <argsstring>(unsigned char key)</argsstring>
        <name>keyDown</name>
        <reimplements refid="classWindowInterface_1a874548802028401146c44f7ba3e54d1d">keyDown</reimplements>
        <reimplementedby refid="classMapWindow_1a289795e503a5aa600e4091f5aa8b0b8c">keyDown</reimplementedby>
        <param>
          <type>unsigned char</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="19" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a249f5a9513be00e59428a1df37502c63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Window::keyUp</definition>
        <argsstring>(unsigned char key)</argsstring>
        <name>keyUp</name>
        <reimplements refid="classWindowInterface_1aa776c5cf4ef3d93a49613e08c79cab77">keyUp</reimplements>
        <param>
          <type>unsigned char</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="20" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1ac0927d0b89776959c4a95dd6737f841f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool Window::getKey</definition>
        <argsstring>(unsigned char key)</argsstring>
        <name>getKey</name>
        <reimplements refid="classWindowInterface_1ab67d23a3dee052fd5901a87518b86e4d">getKey</reimplements>
        <param>
          <type>unsigned char</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="21" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1ace3bd5e6614510fce97263eccc35c0ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Window::mouseDown</definition>
        <argsstring>(int x, int y, int button)</argsstring>
        <name>mouseDown</name>
        <reimplements refid="classWindowInterface_1a5e6ba2b8e6560e9e3b74794cfd123d59">mouseDown</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="22" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a2e2c7592975405513a05a2da6a512b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Window::mouseUp</definition>
        <argsstring>(int x, int y, int button)</argsstring>
        <name>mouseUp</name>
        <reimplements refid="classWindowInterface_1a482961a40e4a07d7f7ac81fe62ee7762">mouseUp</reimplements>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="23" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="36" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1ab824bd52a5a055e468f7b2cc3d0b4f54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Window::getMouseButton</definition>
        <argsstring>(int button)</argsstring>
        <name>getMouseButton</name>
        <param>
          <type>int</type>
          <declname>button</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="24" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a1344118a395cb2fc48d4a2359372b074" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Window::beforeRedraw</definition>
        <argsstring>()</argsstring>
        <name>beforeRedraw</name>
        <reimplements refid="classWindowInterface_1a8aa6ce7a663628e3bd0480d4566191d2">beforeRedraw</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="25" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1aa8b52b7035a78ef960c194c9bb4a7c36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void Window::redraw</definition>
        <argsstring>()</argsstring>
        <name>redraw</name>
        <reimplements refid="classWindowInterface_1a9baf4b0e9c1fdd73b1fe14af4173c699">redraw</reimplements>
        <reimplementedby refid="classSplashWindow_1aad27778951eb9dd5dbb03635f2bda114">redraw</reimplementedby>
        <reimplementedby refid="classMapWindow_1a5759338c3758b2a3252ffc691958dff8">redraw</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="26" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a05b1d6673e37db442ecd80c54d10e6b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Window::afterRedraw</definition>
        <argsstring>()</argsstring>
        <name>afterRedraw</name>
        <reimplements refid="classWindowInterface_1a37e350fc8f4a97333400c03e8544b2eb">afterRedraw</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="27" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classWindow_1a6e4274c73728009132b7e0dfad42a8de" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Window::resize</definition>
        <argsstring>(int width, int height)</argsstring>
        <name>resize</name>
        <reimplements refid="classWindowInterface_1aa7109fc50fd3e90b0589bdd2a5e6972e">resize</reimplements>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/window.h" line="28" column="1" bodyfile="/home/peter/Development/fortress/src/window.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="203">
        <label>SplashWindow</label>
        <link refid="classSplashWindow"/>
        <childnode refid="200" relation="public-inheritance">
        </childnode>
      </node>
      <node id="200">
        <label>Window</label>
        <link refid="classWindow"/>
        <childnode refid="201" relation="public-inheritance">
        </childnode>
      </node>
      <node id="201">
        <label>WindowInterface</label>
        <link refid="classWindowInterface"/>
      </node>
      <node id="202">
        <label>MapWindow</label>
        <link refid="classMapWindow"/>
        <childnode refid="200" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="204">
        <label>Window</label>
        <link refid="classWindow"/>
        <childnode refid="205" relation="public-inheritance">
        </childnode>
        <childnode refid="206" relation="usage">
          <edgelabel>m_engine</edgelabel>
        </childnode>
      </node>
      <node id="205">
        <label>WindowInterface</label>
        <link refid="classWindowInterface"/>
      </node>
      <node id="206">
        <label>GameEngineInterface</label>
        <link refid="classGameEngineInterface"/>
      </node>
    </collaborationgraph>
    <location file="/home/peter/Development/fortress/src/window.h" line="9" column="1" bodyfile="/home/peter/Development/fortress/src/window.h" bodystart="8" bodyend="35"/>
    <listofallmembers>
      <member refid="classWindow_1a05b1d6673e37db442ecd80c54d10e6b7" prot="public" virt="virtual"><scope>Window</scope><name>afterRedraw</name></member>
      <member refid="classWindow_1a821f2d3494f4f8942eb9785a11cb53a3" prot="private" virt="non-virtual"><scope>Window</scope><name>ascii_keys</name></member>
      <member refid="classWindow_1a1344118a395cb2fc48d4a2359372b074" prot="public" virt="virtual"><scope>Window</scope><name>beforeRedraw</name></member>
      <member refid="classWindow_1ae0ed7fd17df30f2d262cb684560e0469" prot="public" virt="virtual"><scope>Window</scope><name>destroy</name></member>
      <member refid="classWindow_1a55a6e31e36665bd3bcffcd844f5f0385" prot="public" virt="virtual"><scope>Window</scope><name>getEngine</name></member>
      <member refid="classWindow_1ac0927d0b89776959c4a95dd6737f841f" prot="public" virt="virtual"><scope>Window</scope><name>getKey</name></member>
      <member refid="classWindow_1ab824bd52a5a055e468f7b2cc3d0b4f54" prot="public" virt="virtual"><scope>Window</scope><name>getMouseButton</name></member>
      <member refid="classWindow_1a3dcd22169bd4d40f4b35eafdea31f6dd" prot="public" virt="virtual"><scope>Window</scope><name>initialise</name></member>
      <member refid="classWindow_1a25a5308909ec422bebb480c803e1233c" prot="public" virt="virtual"><scope>Window</scope><name>keyDown</name></member>
      <member refid="classWindow_1a249f5a9513be00e59428a1df37502c63" prot="public" virt="virtual"><scope>Window</scope><name>keyUp</name></member>
      <member refid="classWindow_1adf12eb74f1a9eb60cf9dd9e95ad73e07" prot="private" virt="non-virtual"><scope>Window</scope><name>m_buttons</name></member>
      <member refid="classWindow_1ac9461ed7e87d19ee881a582909f7229b" prot="private" virt="non-virtual"><scope>Window</scope><name>m_engine</name></member>
      <member refid="classWindow_1a78a36ba2259fdd12ad2cf3346430fb35" prot="public" virt="non-virtual"><scope>Window</scope><name>MAX_BUTTONS</name></member>
      <member refid="classWindow_1ace3bd5e6614510fce97263eccc35c0ab" prot="public" virt="virtual"><scope>Window</scope><name>mouseDown</name></member>
      <member refid="classWindow_1a2e2c7592975405513a05a2da6a512b1c" prot="public" virt="virtual"><scope>Window</scope><name>mouseUp</name></member>
      <member refid="classWindow_1aa8b52b7035a78ef960c194c9bb4a7c36" prot="public" virt="virtual"><scope>Window</scope><name>redraw</name></member>
      <member refid="classWindow_1a6e4274c73728009132b7e0dfad42a8de" prot="public" virt="virtual"><scope>Window</scope><name>resize</name></member>
      <member refid="classWindow_1aa0423e0229d8bfadfdb48dfc353a1f14" prot="private" virt="non-virtual"><scope>Window</scope><name>special_keys</name></member>
      <member refid="classWindow_1a74e6087da23d3c24e9fac0245e5ec92c" prot="public" virt="non-virtual"><scope>Window</scope><name>Window</name></member>
      <member refid="classWindow_1a62b4a97b3c2e492f1d9a46092011e2d9" prot="public" virt="virtual"><scope>Window</scope><name>~Window</name></member>
      <member refid="classWindowInterface_1a38329b7b17b5ae765d81e40e8093f4c5" prot="public" virt="virtual"><scope>Window</scope><name>~WindowInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
