<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="generator_8cpp" kind="file">
    <compoundname>generator.cpp</compoundname>
    <includes refid="generator_8h" local="yes">generator.h</includes>
    <includes refid="gameengine_8h" local="yes">gameengine.h</includes>
    <includes local="no">ctime</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="no">fstream</includes>
    <incdepgraph>
      <node id="629">
        <label>generator.h</label>
        <link refid="generator_8h"/>
        <childnode refid="630" relation="include">
        </childnode>
      </node>
      <node id="643">
        <label>graphics_interface.h</label>
        <link refid="graphics__interface_8h"/>
        <childnode refid="641" relation="include">
        </childnode>
      </node>
      <node id="642">
        <label>collider_component.h</label>
        <link refid="collider__component_8h"/>
      </node>
      <node id="635">
        <label>component_manager.h</label>
        <link refid="component__manager_8h"/>
        <childnode refid="636" relation="include">
        </childnode>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
      </node>
      <node id="641">
        <label>color.h</label>
        <link refid="color_8h"/>
      </node>
      <node id="636">
        <label>component_manager_interface.h</label>
        <link refid="component__manager__interface_8h"/>
        <childnode refid="637" relation="include">
        </childnode>
        <childnode refid="639" relation="include">
        </childnode>
      </node>
      <node id="647">
        <label>event.h</label>
        <link refid="event_8h"/>
        <childnode refid="639" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="637" relation="include">
        </childnode>
      </node>
      <node id="633">
        <label>string</label>
      </node>
      <node id="637">
        <label>entity.h</label>
        <link refid="entity_8h"/>
        <childnode refid="638" relation="include">
        </childnode>
        <childnode refid="633" relation="include">
        </childnode>
      </node>
      <node id="639">
        <label>map</label>
      </node>
      <node id="649">
        <label>event_manager_interface.h</label>
        <link refid="event__manager__interface_8h"/>
      </node>
      <node id="654">
        <label>fstream</label>
      </node>
      <node id="634">
        <label>entity_manager_interface.h</label>
        <link refid="entity__manager__interface_8h"/>
        <childnode refid="635" relation="include">
        </childnode>
        <childnode refid="640" relation="include">
        </childnode>
        <childnode refid="642" relation="include">
        </childnode>
      </node>
      <node id="652">
        <label>ctime</label>
      </node>
      <node id="645">
        <label>window_interface.h</label>
        <link refid="window__interface_8h"/>
      </node>
      <node id="650">
        <label>vector</label>
      </node>
      <node id="630">
        <label>generator_interface.h</label>
        <link refid="generator__interface_8h"/>
      </node>
      <node id="628">
        <label>generator.cpp</label>
        <link refid="generator.cpp"/>
        <childnode refid="629" relation="include">
        </childnode>
        <childnode refid="631" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
      </node>
      <node id="651">
        <label>cstdlib</label>
      </node>
      <node id="648">
        <label>iostream</label>
      </node>
      <node id="632">
        <label>game_engine_interface.h</label>
        <link refid="game__engine__interface_8h"/>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
      </node>
      <node id="638">
        <label>set</label>
      </node>
      <node id="646">
        <label>game_system_interface.h</label>
        <link refid="game__system__interface_8h"/>
        <childnode refid="647" relation="include">
        </childnode>
      </node>
      <node id="644">
        <label>window_manager_interface.h</label>
        <link refid="window__manager__interface_8h"/>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="632" relation="include">
        </childnode>
      </node>
      <node id="653">
        <label>cstring</label>
      </node>
      <node id="631">
        <label>gameengine.h</label>
        <link refid="gameengine_8h"/>
        <childnode refid="632" relation="include">
        </childnode>
        <childnode refid="643" relation="include">
        </childnode>
        <childnode refid="634" relation="include">
        </childnode>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="630" relation="include">
        </childnode>
        <childnode refid="633" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="651" relation="include">
        </childnode>
      </node>
      <node id="640">
        <label>sprite_component.h</label>
        <link refid="sprite__component_8h"/>
        <childnode refid="641" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="generator_8h" kindref="compound">generator.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gameengine_8h" kindref="compound">gameengine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGenerator_1a16cdfb04efdcc06650b99b2121d1b9b9" kindref="member">Generator::generate</ref><sp/>()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(time(0));</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>playerPlaced<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a39fb4ca747e84f5422d313b4c57feb58" kindref="member">m_mapHeight</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGenerator_1aab82506c17f83cef3b1449ee32760e4b" kindref="member">m_mapWidth</ref><sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>map[<ref refid="classGenerator_1a39fb4ca747e84f5422d313b4c57feb58" kindref="member">m_mapHeight</ref>*<ref refid="classGenerator_1aab82506c17f83cef3b1449ee32760e4b" kindref="member">m_mapWidth</ref>];</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(map,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/><ref refid="classGenerator_1a39fb4ca747e84f5422d313b4c57feb58" kindref="member">m_mapHeight</ref>*<ref refid="classGenerator_1aab82506c17f83cef3b1449ee32760e4b" kindref="member">m_mapWidth</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(unsigned<sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>m_rooms;<sp/>r++)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(!generateRoom<sp/>(map));</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a9daa14b13068fbe9efb1d14f55f629d1" kindref="member">loadMap</ref><sp/>(map);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;<sp/>yy<sp/>&lt;<sp/><ref refid="classGenerator_1a39fb4ca747e84f5422d313b4c57feb58" kindref="member">m_mapHeight</ref>;<sp/>yy++)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>0;<sp/>xx<sp/>&lt;<sp/><ref refid="classGenerator_1aab82506c17f83cef3b1449ee32760e4b" kindref="member">m_mapWidth</ref>;<sp/>xx++)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map[yy*m_mapWidth+xx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a67bf71e434d74b280377b4f7acc3dc1d" kindref="member">m_engine</ref>-&gt;<ref refid="classGameEngineInterface_1ac7b9bb5c99fd8fec773a64d492d1869e" kindref="member">getEntities</ref>()-&gt;<ref refid="classEntityManagerInterface_1a9aae8cf72f08ee33ea110325148ef613" kindref="member">createWallPrefab</ref><sp/>(xx,<sp/>yy);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map[yy*m_mapWidth+xx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>!playerPlaced)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a67bf71e434d74b280377b4f7acc3dc1d" kindref="member">m_engine</ref>-&gt;<ref refid="classGameEngineInterface_1ac7b9bb5c99fd8fec773a64d492d1869e" kindref="member">getEntities</ref>()-&gt;<ref refid="classEntityManagerInterface_1aca4bf34ec9006329027f134575a8b844" kindref="member">createPlayerPrefab</ref><sp/>(xx,<sp/>yy);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a67bf71e434d74b280377b4f7acc3dc1d" kindref="member">m_engine</ref>-&gt;<ref refid="classGameEngineInterface_1ac7b9bb5c99fd8fec773a64d492d1869e" kindref="member">getEntities</ref>()-&gt;<ref refid="classEntityManagerInterface_1aa98d0ba0e59103d9aeb7a367fe04c571" kindref="member">createTilePrefab</ref><sp/>(xx,<sp/>yy);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>playerPlaced<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map[yy*m_mapWidth+xx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a67bf71e434d74b280377b4f7acc3dc1d" kindref="member">m_engine</ref>-&gt;<ref refid="classGameEngineInterface_1ac7b9bb5c99fd8fec773a64d492d1869e" kindref="member">getEntities</ref>()-&gt;<ref refid="classEntityManagerInterface_1a9060a65f6799126b3b7827bdd2636e92" kindref="member">createEnemyPrefab</ref><sp/>(xx,<sp/>yy);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a67bf71e434d74b280377b4f7acc3dc1d" kindref="member">m_engine</ref>-&gt;<ref refid="classGameEngineInterface_1ac7b9bb5c99fd8fec773a64d492d1869e" kindref="member">getEntities</ref>()-&gt;<ref refid="classEntityManagerInterface_1aa98d0ba0e59103d9aeb7a367fe04c571" kindref="member">createTilePrefab</ref><sp/>(xx,<sp/>yy);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map[yy*m_mapWidth+xx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classGenerator_1a67bf71e434d74b280377b4f7acc3dc1d" kindref="member">m_engine</ref>-&gt;<ref refid="classGameEngineInterface_1ac7b9bb5c99fd8fec773a64d492d1869e" kindref="member">getEntities</ref>()-&gt;<ref refid="classEntityManagerInterface_1aa98d0ba0e59103d9aeb7a367fe04c571" kindref="member">createTilePrefab</ref><sp/>(xx,<sp/>yy);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classGenerator_1a5f40352b20fe2c4534523e18121cb0e6" kindref="member">Generator::generateRoom</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>map)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMid<sp/>=<sp/>rand()<sp/>%<sp/>(m_mapWidth-1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yMid<sp/>=<sp/>rand()<sp/>%<sp/>(m_mapHeight-1)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>rand()<sp/>%<sp/>6<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>rand()<sp/>%<sp/>6<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startY<sp/>=<sp/>yMid<sp/>-<sp/>height;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startX<sp/>=<sp/>xMid<sp/>-<sp/>length;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endY<sp/>=<sp/>yMid<sp/>+<sp/>height;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>endX<sp/>=<sp/>xMid<sp/>+<sp/>length;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startY<sp/>&lt;<sp/>2<sp/>||<sp/>startX<sp/>&lt;<sp/>2<sp/>||<sp/>endY<sp/>&gt;<sp/>m_mapHeight<sp/>-<sp/>2<sp/>||<sp/>endX<sp/>&gt;<sp/>m_mapWidth<sp/>-<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>dimensions&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>startY;<sp/>yy<sp/>&lt;=<sp/>endY;<sp/>yy++)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map[yy*m_mapWidth+startX]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal"><sp/>||<sp/>map[yy*m_mapWidth+endX]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>vertical<sp/>wall<sp/>check&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[yy*m_mapWidth+startX]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[yy*m_mapWidth+endX]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>startX+1;<sp/>xx<sp/>&lt;=<sp/>endX-1;<sp/>xx++)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(map[startY*m_mapWidth+xx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal"><sp/>||<sp/>map[endY*m_mapWidth+xx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>horizontal<sp/>wall<sp/>check&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[startY*m_mapWidth+xx]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[endY*m_mapWidth+xx]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;W&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>startY+1;<sp/>yy<sp/>&lt;<sp/>endY;<sp/>yy++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>startX+1;<sp/>xx<sp/>&lt;<sp/>endX;<sp/>xx++)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>map[yy*m_mapWidth+xx]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>map[yMid*m_mapWidth+xMid]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>map[yMid*m_mapWidth+xMid+2]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>map[(yMid+2)*m_mapWidth+xMid]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classGenerator_1a9daa14b13068fbe9efb1d14f55f629d1" kindref="member">Generator::loadMap</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>map)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>file<sp/>(</highlight><highlight class="stringliteral">&quot;../maps/test.map&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>line[<ref refid="classGenerator_1aab82506c17f83cef3b1449ee32760e4b" kindref="member">m_mapWidth</ref>];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset<sp/>(line,<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(line));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.getline<sp/>(line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(line));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy<sp/>(map+(m_mapWidth*lineCnt),<sp/>line,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(line));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineCnt++;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(file.gcount()<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/peter/Development/fortress/src/generator.cpp"/>
  </compounddef>
</doxygen>
