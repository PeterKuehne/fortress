<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classEntityManager" kind="class" prot="public">
    <compoundname>EntityManager</compoundname>
    <basecompoundref refid="classEntityManagerInterface" prot="public" virt="non-virtual">EntityManagerInterface</basecompoundref>
    <includes refid="entity__manager_8h" local="no">entity_manager.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classEntityManager_1aa6e686169c3667ffd84e6a3f0e2cfc62" prot="private" static="no" mutable="no">
        <type><ref refid="classGameEngineInterface" kindref="compound">GameEngineInterface</ref> *</type>
        <definition>GameEngineInterface* EntityManager::m_engine</definition>
        <argsstring></argsstring>
        <name>m_engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="31" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntityManager_1a73390a51b55cd69d0d09254894d484b3" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long EntityManager::maxId</definition>
        <argsstring></argsstring>
        <name>maxId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="32" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntityManager_1ac966d9cc295a8222c01a835246206d36" prot="private" static="no" mutable="no">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity* EntityManager::m_player</definition>
        <argsstring></argsstring>
        <name>m_player</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="33" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntityManager_1ab85b819de6db421c0272e76d5089bfbf" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="entity_8h_1a3812b46f7256476cf244cbc0f4a3bde9" kindref="member">EntityId</ref>, <ref refid="classEntity" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::map&lt;EntityId, Entity*&gt; EntityManager::m_idMap</definition>
        <argsstring></argsstring>
        <name>m_idMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="34" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntityManager_1aba0769f85d9f51fe54494ab68e1ebf0e" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="classEntity" kindref="compound">Entity</ref> * &gt;</type>
        <definition>std::map&lt;std::string, Entity*&gt; EntityManager::m_nameMap</definition>
        <argsstring></argsstring>
        <name>m_nameMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="35" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntityManager_1ab0ca6f699c4b0380acc8c0c2dd0fa778" prot="private" static="no" mutable="no">
        <type><ref refid="classComponentManager" kindref="compound">ComponentManager</ref>&lt; <ref refid="structSpriteComponent" kindref="compound">SpriteComponent</ref> &gt;</type>
        <definition>ComponentManager&lt;SpriteComponent&gt; EntityManager::m_sprites</definition>
        <argsstring></argsstring>
        <name>m_sprites</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="36" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classEntityManager_1acdcb4eaa4584972dcfe49dc11f08e196" prot="private" static="no" mutable="no">
        <type><ref refid="classComponentManager" kindref="compound">ComponentManager</ref>&lt; <ref refid="structColliderComponent" kindref="compound">ColliderComponent</ref> &gt;</type>
        <definition>ComponentManager&lt;ColliderComponent&gt; EntityManager::m_colliders</definition>
        <argsstring></argsstring>
        <name>m_colliders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="37" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classEntityManager_1a97a7e5a629a5ffe85a2859384e5ce701" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void EntityManager::initialise</definition>
        <argsstring>(GameEngineInterface *engine)</argsstring>
        <name>initialise</name>
        <reimplements refid="classEntityManagerInterface_1aeb1fd14604e776e874765fa708a7ce26">initialise</reimplements>
        <param>
          <type><ref refid="classGameEngineInterface" kindref="compound">GameEngineInterface</ref> *</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="13" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="6" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1af84b8842db8f732039c41dc4bc30b0c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void EntityManager::destroy</definition>
        <argsstring>()</argsstring>
        <name>destroy</name>
        <reimplements refid="classEntityManagerInterface_1ab27d9f7d97a914785cc5955076c10d70">destroy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="14" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="14" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1af54f317708b43ec7c22be0495a8ce3c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * EntityManager::createEntity</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>createEntity</name>
        <reimplements refid="classEntityManagerInterface_1a95ba3a0c18e752b97de7b6a3ffd0301f">createEntity</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="16" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="13" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1afe54803a7170a4a2d2614348ed9f7cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void EntityManager::destroyEntity</definition>
        <argsstring>(EntityId)</argsstring>
        <name>destroyEntity</name>
        <reimplements refid="classEntityManagerInterface_1a01d56437b2df1ba882da83e5f6aaa163">destroyEntity</reimplements>
        <param>
          <type><ref refid="entity_8h_1a3812b46f7256476cf244cbc0f4a3bde9" kindref="member">EntityId</ref></type>
          <defname>id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="17" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1a098b4e50944a8caffb723e7d0dffbb70" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * EntityManager::getPlayer</definition>
        <argsstring>()</argsstring>
        <name>getPlayer</name>
        <reimplements refid="classEntityManagerInterface_1af59c4f44e337dc04fd7aac61e80b2660">getPlayer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="18" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="41" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1a6d7f11fe8bfe9821377108874b6248e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * EntityManager::createWallPrefab</definition>
        <argsstring>(unsigned int x, unsigned int y)</argsstring>
        <name>createWallPrefab</name>
        <reimplements refid="classEntityManagerInterface_1a9aae8cf72f08ee33ea110325148ef613">createWallPrefab</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="20" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="60" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1aa450f3815645d947e41bec34fd7c628e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * EntityManager::createPlayerPrefab</definition>
        <argsstring>(unsigned int x, unsigned int y)</argsstring>
        <name>createPlayerPrefab</name>
        <reimplements refid="classEntityManagerInterface_1aca4bf34ec9006329027f134575a8b844">createPlayerPrefab</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="21" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="80" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1a8110b8b5376e15127609753e52bd779f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * EntityManager::createEnemyPrefab</definition>
        <argsstring>(unsigned int x, unsigned int y)</argsstring>
        <name>createEnemyPrefab</name>
        <reimplements refid="classEntityManagerInterface_1a9060a65f6799126b3b7827bdd2636e92">createEnemyPrefab</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="22" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="102" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1a37c9debe4a2ecb9316441ea19fdbe04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * EntityManager::createTilePrefab</definition>
        <argsstring>(unsigned int x, unsigned int y)</argsstring>
        <name>createTilePrefab</name>
        <reimplements refid="classEntityManagerInterface_1aa98d0ba0e59103d9aeb7a367fe04c571">createTilePrefab</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="23" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1a0af107dd34e63fa9e84d7b0e0e81d5ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classComponentManagerInterface" kindref="compound">ComponentManagerInterface</ref>&lt; <ref refid="structSpriteComponent" kindref="compound">SpriteComponent</ref> &gt; *</type>
        <definition>ComponentManagerInterface&lt;SpriteComponent&gt;* EntityManager::getSprites</definition>
        <argsstring>()</argsstring>
        <name>getSprites</name>
        <reimplements refid="classEntityManagerInterface_1a91bd6cea03b2b69ddec735e116420dd6">getSprites</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="25" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1ab024c88ff91734e8ba57bba27c985dca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classComponentManagerInterface" kindref="compound">ComponentManagerInterface</ref>&lt; <ref refid="structColliderComponent" kindref="compound">ColliderComponent</ref> &gt; *</type>
        <definition>ComponentManagerInterface&lt;ColliderComponent&gt;* EntityManager::getColliders</definition>
        <argsstring>()</argsstring>
        <name>getColliders</name>
        <reimplements refid="classEntityManagerInterface_1acc684c426594345b02b206efb74b0adc">getColliders</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="26" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classEntityManager_1a23e110f8bc01067e5bd953e8b7008273" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classEntity" kindref="compound">Entity</ref> *</type>
        <definition>Entity * EntityManager::getEntity</definition>
        <argsstring>(EntityId id)</argsstring>
        <name>getEntity</name>
        <reimplements refid="classEntityManagerInterface_1a00346fa684da1972fbd086599b949ed9">getEntity</reimplements>
        <param>
          <type><ref refid="entity_8h_1a3812b46f7256476cf244cbc0f4a3bde9" kindref="member">EntityId</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/peter/Development/fortress/src/entity_manager.h" line="28" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.cpp" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="51">
        <label>EntityManager</label>
        <link refid="classEntityManager"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>EntityManagerInterface</label>
        <link refid="classEntityManagerInterface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="61">
        <label>ComponentManager&lt; SpriteComponent &gt;</label>
        <link refid="classComponentManager"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
        <childnode refid="63" relation="usage">
          <edgelabel>m_components</edgelabel>
        </childnode>
      </node>
      <node id="63">
        <label>std::map&lt; Entity *, SpriteComponent &gt;</label>
        <childnode refid="55" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="64" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="66">
        <label>ComponentManager&lt; ColliderComponent &gt;</label>
        <link refid="classComponentManager"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
        <childnode refid="68" relation="usage">
          <edgelabel>m_components</edgelabel>
        </childnode>
      </node>
      <node id="53">
        <label>EntityManager</label>
        <link refid="classEntityManager"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
        <childnode refid="55" relation="usage">
          <edgelabel>m_player</edgelabel>
        </childnode>
        <childnode refid="59" relation="usage">
          <edgelabel>m_nameMap</edgelabel>
        </childnode>
        <childnode refid="60" relation="usage">
          <edgelabel>m_engine</edgelabel>
        </childnode>
        <childnode refid="61" relation="usage">
          <edgelabel>m_sprites</edgelabel>
        </childnode>
        <childnode refid="66" relation="usage">
          <edgelabel>m_colliders</edgelabel>
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>m_idMap</edgelabel>
        </childnode>
      </node>
      <node id="58">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="60">
        <label>GameEngineInterface</label>
        <link refid="classGameEngineInterface"/>
      </node>
      <node id="62">
        <label>ComponentManagerInterface&lt; SpriteComponent &gt;</label>
        <link refid="classComponentManagerInterface"/>
      </node>
      <node id="55">
        <label>Entity</label>
        <link refid="classEntity"/>
        <childnode refid="56" relation="usage">
          <edgelabel>m_tags</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>m_name</edgelabel>
        </childnode>
      </node>
      <node id="67">
        <label>ComponentManagerInterface&lt; ColliderComponent &gt;</label>
        <link refid="classComponentManagerInterface"/>
      </node>
      <node id="70">
        <label>std::map&lt; EntityId, Entity * &gt;</label>
        <childnode refid="55" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="56">
        <label>std::set&lt; Tag &gt;</label>
      </node>
      <node id="65">
        <label>Color</label>
        <link refid="classColor"/>
      </node>
      <node id="59">
        <label>std::map&lt; std::string, Entity * &gt;</label>
        <childnode refid="55" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
        <childnode refid="57" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
      </node>
      <node id="68">
        <label>std::map&lt; Entity *, ColliderComponent &gt;</label>
        <childnode refid="55" relation="usage">
          <edgelabel>keys</edgelabel>
        </childnode>
        <childnode refid="69" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>ColliderComponent</label>
        <link refid="structColliderComponent"/>
      </node>
      <node id="64">
        <label>SpriteComponent</label>
        <link refid="structSpriteComponent"/>
        <childnode refid="65" relation="usage">
          <edgelabel>bgColor</edgelabel>
          <edgelabel>fgColor</edgelabel>
        </childnode>
      </node>
      <node id="54">
        <label>EntityManagerInterface</label>
        <link refid="classEntityManagerInterface"/>
      </node>
      <node id="57">
        <label>std::string</label>
        <childnode refid="58" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/peter/Development/fortress/src/entity_manager.h" line="11" column="1" bodyfile="/home/peter/Development/fortress/src/entity_manager.h" bodystart="11" bodyend="39"/>
    <listofallmembers>
      <member refid="classEntityManager_1a8110b8b5376e15127609753e52bd779f" prot="public" virt="virtual"><scope>EntityManager</scope><name>createEnemyPrefab</name></member>
      <member refid="classEntityManager_1af54f317708b43ec7c22be0495a8ce3c0" prot="public" virt="virtual"><scope>EntityManager</scope><name>createEntity</name></member>
      <member refid="classEntityManager_1aa450f3815645d947e41bec34fd7c628e" prot="public" virt="virtual"><scope>EntityManager</scope><name>createPlayerPrefab</name></member>
      <member refid="classEntityManager_1a37c9debe4a2ecb9316441ea19fdbe04e" prot="public" virt="virtual"><scope>EntityManager</scope><name>createTilePrefab</name></member>
      <member refid="classEntityManager_1a6d7f11fe8bfe9821377108874b6248e3" prot="public" virt="virtual"><scope>EntityManager</scope><name>createWallPrefab</name></member>
      <member refid="classEntityManager_1af84b8842db8f732039c41dc4bc30b0c1" prot="public" virt="virtual"><scope>EntityManager</scope><name>destroy</name></member>
      <member refid="classEntityManager_1afe54803a7170a4a2d2614348ed9f7cab" prot="public" virt="virtual"><scope>EntityManager</scope><name>destroyEntity</name></member>
      <member refid="classEntityManager_1ab024c88ff91734e8ba57bba27c985dca" prot="public" virt="virtual"><scope>EntityManager</scope><name>getColliders</name></member>
      <member refid="classEntityManager_1a23e110f8bc01067e5bd953e8b7008273" prot="public" virt="virtual"><scope>EntityManager</scope><name>getEntity</name></member>
      <member refid="classEntityManager_1a098b4e50944a8caffb723e7d0dffbb70" prot="public" virt="virtual"><scope>EntityManager</scope><name>getPlayer</name></member>
      <member refid="classEntityManager_1a0af107dd34e63fa9e84d7b0e0e81d5ba" prot="public" virt="virtual"><scope>EntityManager</scope><name>getSprites</name></member>
      <member refid="classEntityManager_1a97a7e5a629a5ffe85a2859384e5ce701" prot="public" virt="virtual"><scope>EntityManager</scope><name>initialise</name></member>
      <member refid="classEntityManager_1acdcb4eaa4584972dcfe49dc11f08e196" prot="private" virt="non-virtual"><scope>EntityManager</scope><name>m_colliders</name></member>
      <member refid="classEntityManager_1aa6e686169c3667ffd84e6a3f0e2cfc62" prot="private" virt="non-virtual"><scope>EntityManager</scope><name>m_engine</name></member>
      <member refid="classEntityManager_1ab85b819de6db421c0272e76d5089bfbf" prot="private" virt="non-virtual"><scope>EntityManager</scope><name>m_idMap</name></member>
      <member refid="classEntityManager_1aba0769f85d9f51fe54494ab68e1ebf0e" prot="private" virt="non-virtual"><scope>EntityManager</scope><name>m_nameMap</name></member>
      <member refid="classEntityManager_1ac966d9cc295a8222c01a835246206d36" prot="private" virt="non-virtual"><scope>EntityManager</scope><name>m_player</name></member>
      <member refid="classEntityManager_1ab0ca6f699c4b0380acc8c0c2dd0fa778" prot="private" virt="non-virtual"><scope>EntityManager</scope><name>m_sprites</name></member>
      <member refid="classEntityManager_1a73390a51b55cd69d0d09254894d484b3" prot="private" virt="non-virtual"><scope>EntityManager</scope><name>maxId</name></member>
      <member refid="classEntityManagerInterface_1a4991d0d31ad6f551335bbc2c65383a9f" prot="public" virt="virtual"><scope>EntityManager</scope><name>~EntityManagerInterface</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
