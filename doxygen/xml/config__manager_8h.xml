<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="config__manager_8h" kind="file">
    <compoundname>config_manager.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includedby refid="config__manager_8cpp" local="no">config_manager.cpp</includedby>
    <includedby refid="graphics_8h" local="yes">graphics.h</includedby>
    <incdepgraph>
      <node id="227">
        <label>config_manager.h</label>
        <link refid="config_manager.h"/>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>string</label>
      </node>
      <node id="228">
        <label>map</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="233">
        <label>graphics.cpp</label>
        <link refid="graphics_8cpp"/>
      </node>
      <node id="231">
        <label>config_manager.cpp</label>
        <link refid="config__manager_8cpp"/>
      </node>
      <node id="230">
        <label>config_manager.h</label>
        <link refid="config_manager.h"/>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>splash_window.cpp</label>
        <link refid="splash__window_8cpp"/>
      </node>
      <node id="234">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="232">
        <label>graphics.h</label>
        <link refid="graphics_8h"/>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structTagValue" prot="public">TagValue</innerclass>
    <innerclass refid="classConfigManager" prot="public">ConfigManager</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>CONFIG_MANAGER_H</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CONFIG_MANAGER_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="structTagValue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="8" refid="structTagValue_1ad588e4c422bcef3e428b1e7a53018e9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structTagValue_1ad588e4c422bcef3e428b1e7a53018e9b" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="9" refid="structTagValue_1a968ed84fa6cfccba6ef104f663ae3c08" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTagValue_1a968ed84fa6cfccba6ef104f663ae3c08" kindref="member">num</ref>;</highlight></codeline>
<codeline lineno="10" refid="structTagValue_1a641f80e1d15c3c3e60e1cec4a83c952b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTagValue_1a641f80e1d15c3c3e60e1cec4a83c952b" kindref="member">dec</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}<sp/><ref refid="structTagValue" kindref="compound">TagValue</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classConfigManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classConfigManager" kindref="compound">ConfigManager</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classConfigManager_1a02426e2b6a4bb2c1b2f3c9ef524c772f" kindref="member">setTag</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTagValue" kindref="compound">TagValue</ref>&amp;<sp/>val);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTagValue" kindref="compound">TagValue</ref><sp/><ref refid="classConfigManager_1aa43f0b0afd5d15642bb986e17887abdc" kindref="member">getTag</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tag);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classConfigManager_1ac50ce34c67bb3157c8504b99d4b705da" kindref="member">readFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>config);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classConfigManager_1a6aab6b3a9a25bc6341fb18f3b7c569b6" kindref="member">stringToTagValue</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>input,<sp/><ref refid="structTagValue" kindref="compound">TagValue</ref>&amp;<sp/>output);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20" refid="classConfigManager_1a5f856d0055899581bd138476045de013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>TagValue&gt;<sp/><ref refid="classConfigManager_1a5f856d0055899581bd138476045de013" kindref="member">m_tags</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/peter/Development/fortress/src/config_manager.h"/>
  </compounddef>
</doxygen>
